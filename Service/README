Here I will discuss the logic flow.

I looked at tasks/steps as nodes on a kind of line graph. Each node is connected to it successor however
under some conditions nodes can have different successors (this capture the second try for the IQ test).

I used strings representing arithmetic/ boolean expressions to represent the conditions for success/ failure in
a task/step, and also the conditions for changes in the successor function of each task.

Both task and step have similar structure so they inherit from a parent class that implement the common
functionality and abstract methods that as a black box act alike but are implemented differently.